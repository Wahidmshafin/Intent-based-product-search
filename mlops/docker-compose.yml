version: "3.9"

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - pgdata:/var/lib/postgresql/data

  airflow-web:
    build:
      context: .
      dockerfile: Dockerfile-airflow
    image: mlops-airflow:latest
    restart: unless-stopped
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW_HOME: /opt/airflow
    volumes:
      - ./airflow:/opt/airflow
      - ./dags:/opt/airflow/dags
      - ./:/opt/ml-pipeline
    ports:
      - "8080:8080"
    command: >
      bash -c "airflow db upgrade &&
               airflow users create --username admin --password admin --firstname a --lastname a --role Admin --email a@a &&
               airflow webserver"

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile-airflow
    image: mlops-airflow:latest
    restart: unless-stopped
    depends_on:
      - postgres
      - airflow-web
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW_HOME: /opt/airflow
    volumes:
      - ./airflow:/opt/airflow
      - ./dags:/opt/airflow/dags
      - ./:/opt/ml-pipeline
    command: airflow scheduler

  ollama:
    image: ollama/ollama:latest
    restart: unless-stopped
    volumes:
      - ./artifacts:/root/.ollama/models
    ports:
      - "11434:11434"

volumes:
  pgdata:
